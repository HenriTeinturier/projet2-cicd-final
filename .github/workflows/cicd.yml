name: CI/CD workflow

on:
  push:
    branches:
      - main

jobs:
  tests-frontend:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: install Node.js
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "./frontend/package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Run Linter
        run: npm run lint
      - name: npm audit
        run: npm audit --production --audit-level=high

  tests-node-api:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./node-api
    strategy:
      fail-fast: true
      matrix:
        npm_commande:
          [
            "run test:ci",
            "run lint",
            "audit --production --audit-level=critical",
          ]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: install Node.js
        uses: actions/setup-node@v4
        with:
          cache: "npm"
          cache-dependency-path: "./node-api/package-lock.json"
      - name: Install dependencies
        run: npm ci
      - name: Lancer les tests
        run: npm ${{ matrix.npm_commande }}
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

  build-frontend-and-api:
    runs-on: ubuntu-latest
    needs: [tests-frontend, tests-node-api]
    strategy:
      matrix:
        include:
          - context_name: frontend
            image_name: ghcr.io/henriteinturier/projet2-cicd-final/frontend
          - context_name: node-api
            image_name: ghcr.io/henriteinturier/projet2-cicd-final/node-api
    permissions:
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ matrix.image_name }}
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: ./${{ matrix.context_name  }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,name=cache
